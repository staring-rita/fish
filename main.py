#–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É vk_api (pip install vka_pi)
from seting import VK_TOKEN, WEATHER_TOKEN
import vk_api
from vk_api import longpoll
#–î–æ—Ç—Å–∞–ª–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
from vk_api.longpoll import VkLongPoll, VkEventType
import requests
from settings import VK_TOKEN, WEATHER_TOKEN
#–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≥—Ä—É–ø–ø—ã –í–ö
url = "http://api.openweathermap.org/data/2.5/weather"
api_key = WEATHER_TOKEN

keyboard = '{{"buttons":[[{"action":{"type":"text","label":"–ú–æ—Å–∫–≤–∞","payload":""},"color":"negative"},{"action":{"type":"text","label":"–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥","payload":""},"color":"positive"},{"action":{"type":"text","label":"–£–ª–∞–Ω-–£–¥—ç","payload":""},"color":"secondary"}],[{"action":{"type":"text","label":"–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫","payload":""},"color":"primary"},{"action":{"type":"text","label":"–ö–µ–º–µ—Ä–æ–≤–æ","payload":""},"color":"secondary"}],[{"action":{"type":"text","label":"–ü–æ–≥–æ–¥–∞","payload":""},"color":"positive"}]]}""}]]}'

#–ü–æ–¥–∫–ª—é—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ longpoll
token_connection = vk_api.VkApi(token = token)
give = token_connection.get_api()
longpoll = VkLongPoll(token_connection)

def weather(city_name):
    params = {"APPID": api_key, "q": city_name, "units": "metric", "lang": "ru"}
    result = requests.get(url, params=params)
    weather = result.json()
    print(weather)
    result = ""
    if weather['cod'] == '404':
        result = "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        result = "–í –≥–æ—Ä–æ–¥–µ " + weather['name'] + '\n'
        result += "–ü–æ–≥–æ–¥–∞: "+ weather['weather'][0]['description'] +"\n"
        result += "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(weather['main']['temp']) + "¬∞C\n"
        result += "–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ " + str(weather['main']['feels_like']) + "¬∞C\n"
        result += "–î–∞–≤–ª–µ–Ω–∏–µ " + str(weather['main']['pressure']) + "–º–º—Ä—Ç\n"
        result += "–í–ª–∞–∂–Ω–æ—Å—Ç—å " + str(weather['main']['humidity']) + "%\n"
        result += "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ " + str(weather['wind']['speed']) + "–º/—Å\n"
        result += "–í–æ—Å—Ö–æ–¥ " + str(weather['sys']['sunrise']) + "\n"
        result += "–ó–∞–∫–∞—Ç " + str(weather['sys']['sunset']) + "\n"
    return result

#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –õ–° –≥—Ä—É–ø–ø—ã
def write_msg(id, text):
    token_connection.method('messages.send', {'user_id' : id, 'message' : text, 'random_id' : 0, "keyboard": keyboard})

#–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
def answer(id, text):
    if text == '–ø—Ä–∏–≤–µ—Ç' or text == '–Ω–∞—á–∞—Ç—å':
        return '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç \n‡ºº „Å§ ‚óï_‚óï ‡ºΩ„Å§\nüëã\n–Ø –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç'
    elif text == '–∫–∞–∫ –¥–µ–ª–∞?':
        return '–•–æ—Ä–æ—à–æ, –∞ –∫–∞–∫ —Ç–≤–æ–∏?'
    elif text == '–ø–æ–≥–æ–¥–∞':
        write_msg(id, '–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
        #—Å–ª—É—à–∞–µ–º longpool –∏ –∂–¥—ë–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É
        for event in longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW:
                #–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞
                if event.to_me:
                    #–ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –µ–≥–æ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                    message = event.text.lower()
                    return weather(message) 
    else:
        return weather(text)

try:
    #—Å–ª—É—à–∞–µ–º longpool –∏ –∂–¥—ë–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            #–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞
            if event.to_me:
                #–ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –µ–≥–æ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                message = event.text.lower()
                #–ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                id = event.user_id
                print("id:", id )
                text = answer(id, message)
                write_msg(id, text)
                print(id, message, event.datetime)

                user_get=give.users.get(user_ids = (id))
                print(user_get)
                first_name=user_get[0]['first_name']
                last_name=user_get[0]['last_name']
                full_name=first_name+" "+last_name
                print (full_name)
                

except KeyboardInterrupt:
    print("Stop")
finally:
    print()